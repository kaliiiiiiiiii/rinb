on:
  release:
    types: [created]



jobs:

  security_audit:
    runs-on: ubuntu-latest
    container:
      image: alpine:3.22
    
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: apk add cargo-audit
      
      - name: Audit
        run: cargo-audit audit
        working-directory: rinb
      - name: set-matrix
        id: set-matrix
        run: |
            printf 'matrix<<EOF\n%s\nEOF\n' "$MATRIX_JSON" >> $GITHUB_OUTPUT
        env:
          MATRIX_JSON: |
            {
            "target":
              [
                "x86_64-pc-windows-gnu",
                "x86_64-unknown-linux-gnu"
              ]
            }
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build:
    runs-on: ubuntu-latest
    needs: [security_audit]
    permissions:
     contents: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.security_audit.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          if [[ "${{ matrix.target }}" == *windows* ]]; then
            sudo apt-get install mingw-w64
          fi
          
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . "$HOME/.cargo/env"  # add freshly installed cargo to $path
          rustup install stable
          rustup target add ${{ matrix.target }}
      
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./rinb -> ${{ matrix.target }}"
          prefix-key: "v0-rust-${{ matrix.target }}"
        
      - name: Build executable
        run: |
          if [[ "${{ matrix.target }}" == *windows* ]]; then
            cargo build --target ${{ matrix.target }} --release --locked
          else
            cargo build --target ${{ matrix.target }} --release
          fi
        working-directory: "rinb"
          
      - name: Rename executable to include tag
        id: rename
        run: |
          tag="${{ github.event.release.tag_name }}"
          oldPath="rinb/target/${{ matrix.target }}/release/rinb"

          # Check if target contains "windows"
          if [[ "${{ matrix.target }}" == *windows* ]]; then
            oldPath="$oldPath.exe"
            newName="rinb-${{ matrix.target }}-$tag.exe"
          else
            newName="rinb-${{ matrix.target }}-$tag"
          fi

          mkdir -p out
          newPath="out/$newName"
          cp "$oldPath" "$newPath"

          echo "renamed=$newPath" >> "$GITHUB_OUTPUT"
          echo "name=$newName" >> "$GITHUB_OUTPUT"
      
      - run: tree ./out
      
      - uses: actions/upload-artifact@v4
        id: artifact-upload
        with:
          name: ${{ matrix.target }}
          path: out
    outputs:
        target: ${{ matrix.target }}
        name: ${{ steps.rename.outputs.name }}

  test:
      needs: [security_audit,build]
      strategy:
        fail-fast: false
        matrix: ${{ fromJSON(needs.security_audit.outputs.matrix) }}
      runs-on: ${{ contains( matrix.target, 'windows') && 'windows-latest' || 'ubuntu-latest' }}
      steps:
        - uses: actions/checkout@v3
        - uses: actions/download-artifact@v5
          with:
            name: ${{matrix.target}}
        - run: tree .
        - name: Test rinb
          run: ${{ needs.build.outputs.name }} --config ./rinb.json

  release:
    runs-on: ubuntu-latest
    needs: [security_audit,build, test]
    strategy:
      matrix:
        target: ${{ fromJSON(needs.security_audit.outputs.matrix) }}
    permissions:
     contents: write
    steps:
      - uses: actions/download-artifact@v5
        with:
            name: ${{matrix.target}}
      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ needs.build.outputs.name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            > [!WARNING]  
            > Only `rinb-x86_64-pc-windows-gnu-vX.X.X.X.X.exe` has locked dependencies and is tested.
          append_body: true